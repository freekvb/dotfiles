#!/bin/sh

#-----------------------------------------------------------------------------#
# File:     ~/.config/bspwm/panel  (archlinux - 'silent')
# Date:     Wed 21 Apr 2021 19:42
# Update:   Sat 16 Oct 2021 04:16
# Owner:    fvb - freekvb@gmail.com - https://freekvb.github.io/fvb/
#-----------------------------------------------------------------------------#


export PANEL_FIFO=/tmp/panel-fifo
export PANEL_HEIGHT=16
export PANEL_FONT="Terminus:pixelsize=14:antialias=true:autohint=true"
export PANEL_WM_NAME=bspwm_panel


if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"



#-------- panel center -------------------------------------------------------#

xtitle -sf 'T%s\n' > "$PANEL_FIFO" &



#-------- panel left ---------------------------------------------------------#

clock() {
    clock=$(date +'%a %d %b %H:%M')
    echo -n "$clock"
}

cpu() {
    cpu=$(top -bn 1 | awk '/^%Cpu/ {print int($2 + $4 + $6)"%"}')
    echo -n "$cpu"
}

cputemp() {
    cputemp=$(sensors | awk 'BEGIN{i=0;t=0;b=0}/id [0-9]/{b=$4};/Core/{++i;t+=$3}END{if(i>0){printf("%0.1f\n",t/i)}else{sub(/[^0-9.]/,"",b);print b}}')
    echo -n "$cputemp"Â°C
}

mem() {
    mem=$(free -m | egrep Mem | awk '{printf "%.f%\n", ($3+$5)/$2*100}')
    echo -n "$mem"
}

upd() {
    upd=$(checkupdates | wc -l)
    echo -n "$upd"
}

mail() {
    mail=$(curl -u freekvb:gm4fvb --silent "https://mail.google.com/mail/feed/atom" | tr -d '\n' | awk -F '<entry>' '{for (i=2; i<=NF; i++) {print $i}}' | sed -n "s/<title>\(.*\)<\/title.*name>\(.*\)<\/name>.*/\2 - \1/p" | wc -l)
    echo -n "$mail"
}

volume() {
    volume=$(amixer get Master | sed -n 'N;s/^.*\[\([0-9]\+%\).*$/\1/p')
    echo -n "$volume"
}


while true; do
    echo -e "S%{F#B5C1BE}%{B#1c1b1b} [cpu $(cpu)] [temp $(cputemp)] [mem $(mem)] [upd $(upd)] [mail $(mail)] [vol $(volume)]  [%{F-}%{B-}%{F#ebe5d9}%{B#1c1b1b}$(clock)%{F-}%{B-}]"
        sleep 1
done > "$PANEL_FIFO" &



#-------- panel right --------------------------------------------------------#

btc() {
    btc=$(curl -s -X GET "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=USD" -H "accept: application/json" | grep -Eo '[+-]?[0-9]+([.][0-9]+)?' | awk '{printf "%.0f\n", $1}')
    echo -n "$btc"
}

xmr() {
    xmr=$(curl -s -X GET "https://api.coingecko.com/api/v3/simple/price?ids=monero&vs_currencies=USD" -H "accept: application/json" | grep -Eo '[+-]?[0-9]+([.][0-9]+)?' | awk '{printf "%.0f\n", $1}')
    echo -n "$xmr"
}

hbar() {
    hbar=$(curl -s -X GET "https://api.coingecko.com/api/v3/simple/price?ids=hedera-hashgraph&vs_currencies=USD" -H "accept: application/json" | grep -Eo '[+-]?[0-9]+([.][0-9]+)?' | awk '{printf "%.2f\n", $1}')
    echo -n "$hbar"
}

cro() {
    cro=$(curl -s -X GET "https://api.coingecko.com/api/v3/simple/price?ids=crypto-com-chain&vs_currencies=USD" -H "accept: application/json" | grep -Eo '[+-]?[0-9]+([.][0-9]+)?' | awk '{printf "%.2f\n", $1}')
    echo -n "$cro"
}


while true; do
    echo -e "C%{F#B5C1BE}%{B#1c1b1b} [btc $(btc)] [xmr $(xmr)] [hbar $(hbar)] [cro $(cro)] %{F-}%{B-}"
        sleep 60
done > "$PANEL_FIFO" &



#-----------------------------------------------------------------------------#

bspc subscribe report > "$PANEL_FIFO" &

. panel_colors

panel_bar < "$PANEL_FIFO" |
    lemonbar -a 32 \
             -u 2 \
             -n "$PANEL_WM_NAME" \
             -g x$PANEL_HEIGHT \
             -f "$PANEL_FONT" \
             -F "$COLOR_DEFAULT_FG" \
             -B "$COLOR_DEFAULT_BG" | sh &

wid=$(xdo id -m -a "$PANEL_WM_NAME")
xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait
